apply plugin: 'java-library'
apply plugin: 'kiln-standard'


import com.github.glassmc.kiln.standard.CustomRemapper

import static com.github.glassmc.kiln.standard.DependencyHandlerExtension.*

sourceCompatibility = targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url = 'https://jitpack.io/'
    }
    maven {
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
}

dependencies {
    api project(':impl:client')
    compileOnly minecraft('client', '1.8.9', 'yarn')
    compileOnly 'com.github.glassmc:loader:v0.3.2'

    api 'org.ow2.asm:asm-tree:9.2'
    api 'org.ow2.asm:asm-commons:9.2'
    api 'org.ow2.asm:asm-util:9.2'
    api 'com.google.guava:guava:30.1.1-jre'
    api 'org.spongepowered:mixin:0.8.3'
}

kiln {
    remappers = [new MixinRemapper()]
}

class MixinRemapper extends CustomRemapper {

    private boolean foundMixinDeclaration = false
    private String currentMixinClass = null

    private boolean foundInjectDeclaration = false;

    @Override
    String mapAnnotationAttributeName(String descriptor, String name) {
        System.out.println(descriptor + " " + name)
        if(descriptor == "Lorg/spongepowered/asm/mixin/Mixin;" && name == "value") {
            foundMixinDeclaration = true
        }

        if(descriptor == "Lorg/spongepowered/asm/mixin/injection/Inject;" && name == "method") {
            foundInjectDeclaration = true
        }
        return super.mapAnnotationAttributeName(descriptor, name)
    }

    @Override
    Object mapValue(Object value) {
        if(foundMixinDeclaration) {
            String string = (String) value
            if(string.startsWith("L")) {
                currentMixinClass = string.substring(1, string.length() - 1)
            } else {
                currentMixinClass = string
            }
            foundMixinDeclaration = false
        }
        if(foundInjectDeclaration) {
            String string = (String) value
            int splitIndex = string.indexOf('(')
            String name = string.substring(0, splitIndex)
            String desc = string.substring(splitIndex)

            System.out.println(currentMixinClass + " " + name + " " + desc);

            System.out.println(this.getParent().mapMethodName(currentMixinClass.replace(".", "/"), name, desc) + " " + this.getParent().mapMethodDesc(desc))
            System.out.println(this.getParent().mapMethodName(currentMixinClass.replace(".", "/"), name, desc) + this.getParent().mapMethodDesc(desc))

            foundInjectDeclaration = false
            return this.getParent().mapMethodName(currentMixinClass.replace(".", "/"), name, desc) + this.getParent().mapMethodDesc(desc)
        }
        return super.mapValue(value)
    }

}

compileJava.dependsOn("processResources")